### Next.js セットアップ

```
pnpm dlx create-next-app@latest blog-sample-front-test
Packages: +1
+
Progress: resolved 1, reused 0, downloaded 1, added 1, done
✔ Would you like to use TypeScript? … No / Yes
✔ Would you like to use ESLint? … No / Yes
✔ Would you like to use Tailwind CSS? … No / Yes
✔ Would you like your code inside a `src/` directory? … No / Yes
✔ Would you like to use App Router? (recommended) … No / Yes
✔ Would you like to use Turbopack for `next dev`? … No / Yes
✔ Would you like to customize the import alias (`@/*` by default)? … No / Yes
Creating a new Next.js app in /Users/xxx/workspace/tmp/blog-sample-front-test.
```

### Prettier インストール

https://prettier.io/docs/install

```
pnpm add --save-dev --save-exact prettier

node --eval "fs.writeFileSync('.prettierrc','{}\n')"
node --eval "fs.writeFileSync('.prettierignore','# Ignore artifacts:\nbuild\ncoverage\n')"

pnpm exec prettier . --write
pnpm exec prettier . --check
```

```
{
  "trailingComma": "es5",
  "semi": true,
  "singleQuote": true
}
```

### ES Lint連携

https://nextjs.org/docs/app/api-reference/config/eslint#with-prettier

```
pnpm add --save-dev eslint-config-prettier
```

```
import { dirname } from 'path';
import { fileURLToPath } from 'url';
import { FlatCompat } from '@eslint/eslintrc';

const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

const compat = new FlatCompat({
  baseDirectory: __dirname,
});

const eslintConfig = [
  ...compat.extends('next/core-web-vitals', 'next/typescript', 'prettier'),
];

export default eslintConfig;
```

### Git hooks

https://prettier.io/docs/install#git-hooks

https://nextjs.org/docs/app/api-reference/config/eslint#running-lint-on-staged-files

```
pnpm add --save-dev husky lint-staged
pnpm exec husky init
node --eval "fs.writeFileSync('.husky/pre-commit','pnpm exec lint-staged\n')"
```

> If you use ESLint, make sure lint-staged runs it before Prettier, not after.

